// This file was automatically generated by the PGA460 Configuration Tool.
// Do not edit this file manually.

#ifndef PGA460_CONFIG_H
#define PGA460_CONFIG_H

#include <stdint.h>
// Assuming PGA460_t and PGA460_THR_t structures are defined elsewhere,
// e.g., in PGA460_REG.h or a similar definitions file.

// Example structure definitions (replace with your actual definitions if different)
/*
typedef struct {
    uint8_t USER_DATA1;
    uint8_t USER_DATA2;
    // ... up to USER_DATA20
} PGA460_USER_DATA_t;

typedef struct {
    struct {
        uint8_t Value;
        // Add bitfield for TVGAIN0 if needed, e.g.,
        // struct {
        //     uint8_t TVG_T0 : 4;
        //     uint8_t TVG_T1 : 4;
        // } BitField;
    } TVGAIN0;
    // ... other TVG registers
} PGA460_TVG_t;

typedef struct {
    PGA460_TVG_t TGV;
    struct { uint8_t Val; } INIT_GAIN;
    uint8_t FREQ;
    struct { uint8_t Val; } DEADTIME;
    struct { uint8_t Val; } PULSE_P1;
    struct { uint8_t Val; } PULSE_P2;
    struct {
        struct {
            uint8_t CURR_LIM1 : 6;
            uint8_t Reserved : 1; // Bit 6
            uint8_t DIS_CL : 1;   // Bit 7
        } BitField;
        uint8_t Val; // For direct byte access
    } CURR_LIM_P1;
    struct { uint8_t Val; } CURR_LIM_P2;
    struct { uint8_t Val; } REC_LENGTH;
    struct { uint8_t Val; } FREQ_DIAG;
    struct { uint8_t Val; } SAT_FDIAG_TH;
    struct { uint8_t Val; } FVOLT_DEC;
    struct { uint8_t Val; } DECPL_TEMP;
    struct { uint8_t Val; } DSP_SCALE;
    struct { uint8_t Val; } TEMP_TRIM;
    struct { uint8_t Val; } P1_GAIN_CTRL;
    struct { uint8_t Val; } P2_GAIN_CTRL;
    // uint8_t EE_CRC; // This is read-only, not typically part of a config struct
} PGA460_EEPROM_t;

typedef struct {
    PGA460_USER_DATA_t USER_DATA;
    PGA460_EEPROM_t EEPROM;
} PGA460_t;

typedef struct {
    struct { uint8_t Val; } P1_THR_0;
    // ... up to P1_THR_15
    struct { uint8_t Val; } P2_THR_0;
    // ... up to P2_THR_15
    uint8_t THR_CRC;
} PGA460_THR_t;
*/


// PGA460 Transducer Configuration
PGA460_t transducer = {
    // User data section (all 0x00 by default from the tool)
    .USER_DATA = {
        .USER_DATA1  = 0x00, .USER_DATA2  = 0x00, .USER_DATA3  = 0x00, .USER_DATA4  = 0x00,
        .USER_DATA5  = 0x00, .USER_DATA6  = 0x00, .USER_DATA7  = 0x00, .USER_DATA8  = 0x00,
        .USER_DATA9  = 0x00, .USER_DATA10 = 0x00, .USER_DATA11 = 0x00, .USER_DATA12 = 0x00,
        .USER_DATA13 = 0x00, .USER_DATA14 = 0x00, .USER_DATA15 = 0x00, .USER_DATA16 = 0x00,
        .USER_DATA17 = 0x00, .USER_DATA18 = 0x00, .USER_DATA19 = 0x00, .USER_DATA20 = 0x00,
    },
    .EEPROM = {
        // Time-Varying Gain (TVG) based on tested setup
        .TGV = {
            .TVGAIN0.Val.Value = 0x35,
            .TVGAIN1.Val.Value = 0x55,
            .TVGAIN2.Val.Value = 0x53,
            .TVGAIN3.Val.Value = 0xFF,
            .TVGAIN4.Val.Value = 0xFF,
            .TVGAIN5.Val.Value = 0xFF,
            .TVGAIN6.Val.Value = 0xFC, // TVG6 includes TVG and FreqShift control
        },
        // Initial Gain
        .INIT_GAIN.Val = 0x00,
        // Transmit Frequency
        .FREQ = 0x8C,
        // Deadtime + Comparator Deglitch
        .DEADTIME.Val = 0x00,
        // Burst Pulses
        .PULSE_P1.Val = 0x02,
        .PULSE_P2.Val = 0x04,
        // Current Limits
        .CURR_LIM_P1.Val.BitField.CURR_LIM1 = 0x1D,
        .CURR_LIM_P2.Val = 0x1D,
        // Record Length
        .REC_LENGTH.Val = 0x00,
        // Diagnostics and scaling
        .FREQ_DIAG.Val = 0x33,
        .SAT_FDIAG_TH.Val = 0xFF,
        .FVOLT_DEC.Val = 0x02,
        .DECPL_TEMP.Val = 0xC0,
        .DSP_SCALE.Val = 0x28,
        .TEMP_TRIM.Val = 0x00,
        // Gain control for P1 and P2
        .P1_GAIN_CTRL.Val = 0x00,
        .P2_GAIN_CTRL.Val = 0x00,
    }
};

// PGA460 Threshold Configuration
const PGA460_THR_t THRESHOLD_75_STRUCT = {
    .P1_THR_0.Val.Value = 0x00,     .P1_THR_1.Val.Value = 0x01,     .P1_THR_2.Val.Value = 0x12,     .P1_THR_3.Val.Value = 0x22, 
    .P1_THR_4.Val.Value = 0x22,     .P1_THR_5.Val.Value = 0x22,     .P1_THR_6.Val.Value = 0xFF,     .P1_THR_7.Val.Value = 0xFF, 
    .P1_THR_8.Val.Value = 0xFF,     .P1_THR_9.Val.Value = 0xFF,     .P1_THR_10.Val.Value = 0xE7,     .P1_THR_11           = 0x00, 
    .P1_THR_12           = 0x00,     .P1_THR_13           = 0x00,     .P1_THR_14           = 0x00,     .P1_THR_15.Val.Value = 0x07, 

    .P2_THR_0.Val.Value = 0x00,     .P2_THR_1.Val.Value = 0x01,     .P2_THR_2.Val.Value = 0x12,     .P2_THR_3.Val.Value = 0x22, 
    .P2_THR_4.Val.Value = 0x22,     .P2_THR_5.Val.Value = 0x22,     .P2_THR_6.Val.Value = 0xFF,     .P2_THR_7.Val.Value = 0xFF, 
    .P2_THR_8.Val.Value = 0xFF,     .P2_THR_9.Val.Value = 0xFF,     .P2_THR_10.Val.Value = 0xE7,     .P2_THR_11           = 0x00, 
    .P2_THR_12           = 0x00,     .P2_THR_13           = 0x00,     .P2_THR_14           = 0x00,     .P2_THR_15.Val.Value = 0x07, 
    .THR_CRC             = 0x2F
};

#endif // PGA460_CONFIG_H
